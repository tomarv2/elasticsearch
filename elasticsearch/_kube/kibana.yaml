apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: devops
  labels:
    component: es
    role: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      component: es
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        component: es
        role: kibana
    spec:
      containers:
      - name: kibana
        image: kibana:7.4.2
        env:
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: XPACK_MONITORING_ENABLED
          value: "false"
        - name: XPACK_ML_ENABLED
          value: "false"
        - name: XPACK_GRAPH_ENABLED
          value: "false"
        - name: XPACK_WATCHER_ENABLED
          value: "false"
        - name: ELASTICSEARCH_URL
          value: http://es:9200
        - name: ELASTICSEARCH_HOSTS
          value: http://es:9200
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
        volumeMounts:
        - name: es-config-volume
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        - name: es-config-volume
          mountPath: /usr/share/kibana/config/role_mapping.yml
          subPath: role_mapping.yml
        - name: es-config-volume
          mountPath: /usr/share/kibana/config/log4j2.properties
          subPath: log4j2.properties
#        resources:
#          requests:
#            cpu: 4
#            memory: 8Gi
#          limits:
#            cpu: 4
#            memory: 8Gi
      volumes:
      - name: es-config-volume
        configMap:
          name: es-config

---
apiVersion: v1
kind: Service
namespace: devops
metadata:
  name: kibana
  namespace: devops
  labels:
    component: es
    role: kibana
spec:
  type: NodePort
  #clusterIP: "None"
  selector:
    component: es
    role: kibana
  ports:
  - name: http
    port: 5601
    protocol: TCP